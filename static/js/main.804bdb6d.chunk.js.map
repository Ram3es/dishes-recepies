{"version":3,"sources":["shared/components/Modal.jsx","containers/Dishes/components/ModalForm/ModalForm.jsx","shared/utils.js","containers/Dishes/components/Favourite/Favourite.jsx","containers/Dishes/components/RandomDish/RandomDish.jsx","containers/Dishes/components/store/service.js","router/index.js","containers/Dishes/components/Header/styles.js","containers/Dishes/components/Header/Header.jsx","containers/Dishes/components/SideBar/components/styles.js","containers/Dishes/components/SideBar/components/SideBar.jsx","containers/Dishes/components/MainContent/MainContent.jsx","containers/Dishes/containers/styles.js","containers/Dishes/containers/Main.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Modal","root","document","createElement","body","appendChild","this","removeChild","ReactDOM","createPortal","className","props","children","React","Component","ModalForm","addDish","showModal","isOpenModal","initialValues","strMeal","strInstructions","onSubmit","idMeal","Math","floor","random","state","concat","strMealThumb","handleChange","values","type","name","placeholder","value","onChange","Button","variant","color","style","margin","Favourite","useState","JSON","parse","localStorage","getItem","dishes","setDishes","setIsOpenModal","useEffect","setItem","stringify","onClick","map","Card","sx","maxWidth","CardMedia","component","height","image","alt","CardContent","Typography","gutterBottom","CardActions","size","id","filteredList","filter","item","handleRemove","RandomDish","setValue","fetchRecepies","a","Promise","resolve","reject","axios","get","then","response","catch","error","data","meals","updateData","publicRoutes","path","element","icon","PostAddSharp","fontSize","label","FavoriteBorderOutlined","makeStyles","theme","toolbar","paddingRight","marginLeft","paddingLeft","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","enteringScreen","menuButton","marginRight","menuButtonHidden","display","title","flexGrow","userInfo","padding","Header","open","setOpen","classes","useStyles","pathname","useLocation","headerTitle","setTitle","activeRoute","find","route","AppBar","position","classnames","Toolbar","IconButton","edge","noWrap","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","toolbarIcon","mixins","alignItems","justifyContent","minHeight","info","marginTop","nav","cursor","childNav","backgroundColor","nestedListSubheader","SideBar","navigate","useNavigate","renderListItems","parentRoutePath","fullPath","ListItem","dense","Boolean","button","ListItemIcon","ListItemText","primary","Drawer","paper","Divider","List","Fragment","MainContent","container","content","overflowY","appBarSpacer","Main","App","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.804bdb6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nexport default class Modal extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.root = document.createElement(\"div\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.root);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.root);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(<div className=\"modal\">{this.props.children}</div>, this.root);\r\n  }\r\n}\r\n","import { Formik, Form } from \"formik\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Modal } from \"../../../../shared/components\";\r\nimport \"./index.scss\";\r\nimport { generateId } from \"../../../../shared/utils\";\r\n\r\nconst ModalForm = ({ addDish, showModal, isOpenModal }) => {\r\n  \r\n  const handlerSubmit = ({ strMeal, strInstructions }) => {\r\n    const idMeal = generateId();\r\n    const strMealThumb =\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDkbpFIYZ78IroEzBsQ3ftnN8GpVmqUaRhuw&usqp=CAU\";\r\n\r\n    addDish((state) => state.concat([{ strMeal, strInstructions, idMeal: idMeal, strMealThumb }]));\r\n    showModal(false);\r\n  };\r\n  return isOpenModal ? (\r\n    <Modal>\r\n      <div className=\"wrapper\">\r\n        <Formik initialValues={{ strMeal: \"\", strInstructions: \"\" }} onSubmit={handlerSubmit}>\r\n          {({ handleChange, values: { strMeal, strInstructions } }) => (\r\n            <Form>\r\n              <div>\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  name=\"strMeal\"\r\n                  placeholder=\"\r\n           Name of dishes ...\"\r\n                  value={strMeal}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <textarea\r\n                className=\"textarea\"\r\n                placeholder=\"Recepies ...\"\r\n                name=\"strInstructions\"\r\n                value={strInstructions}\r\n                onChange={handleChange}\r\n              />\r\n\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ margin: \"15px 15px\" }}>\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </Modal>\r\n  ) : null;\r\n};\r\n\r\nexport default ModalForm;\r\n","export function generateId() {\r\n  return Math.floor(Math.random() * 10 ** 5);\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { ModalForm } from \"../ModalForm\";\r\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button } from \"@material-ui/core\";\r\nimport \"./index.scss\";\r\n\r\nconst Favourite = () => {\r\n  const [dishes, setDishes] = useState(JSON.parse(localStorage.getItem(\"data\")) || []);\r\n  const [isOpenModal, setIsOpenModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"data\", JSON.stringify(dishes));\r\n  }, [dishes]);\r\n\r\n  const handleRemove = (id) => {\r\n    const filteredList = dishes.filter((item) => item.idMeal !== id);\r\n    setDishes(filteredList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"btn\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={() => setIsOpenModal(true)}>\r\n          Add Your Best\r\n        </Button>\r\n      </div>\r\n      <div className=\"container\">\r\n        {dishes &&\r\n          dishes.map((value) => (\r\n            <div key={Math.random()} className=\"content\">\r\n              <Card sx={{ maxWidth: 245 }}>\r\n                <CardMedia component=\"img\" height=\"250\" image={value.strMealThumb} alt=\"green iguana\" />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {value.strMeal}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"initial\" component=\"div\">\r\n                    <div className=\"instruction\">{value.strInstructions}</div>\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" onClick={() => handleRemove(value.idMeal)} color=\"secondary\">\r\n                    {\" \"}\r\n                    Remove{\" \"}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <ModalForm showModal={setIsOpenModal} isOpenModal={isOpenModal} addDish={setDishes} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Favourite;\r\n","import { fetchMeal } from \"../store/service\";\r\nimport \"./index.scss\";\r\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst RandomDish = () => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const fetchRecepies = async () => {\r\n    const { data } = await fetchMeal();\r\n    setValue(data.meals[0]);\r\n  };\r\n  useEffect(() => {\r\n    fetchRecepies();\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    fetchRecepies();\r\n  };\r\n\r\n  const handleAddDish = () => {\r\n    const dishes = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n    const updateData = dishes.concat([value]);\r\n    localStorage.setItem(\"data\", JSON.stringify(updateData));\r\n  };\r\n\r\n  return value ? (\r\n    <div className=\"container\">\r\n      <div className=\"content\">\r\n        {\" \"}\r\n        <Card sx={{ maxWidth: 345 }}>\r\n          <CardMedia component=\"img\" height=\"250\" image={value.strMealThumb} alt=\"green iguana\" />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {value.strMeal}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"secondary\" component=\"div\">\r\n              <div className=\"instruction\">{value.strInstructions}</div>\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={handleClick} color=\"secondary\">\r\n              Skip\r\n            </Button>\r\n            <Button size=\"small\" onClick={handleAddDish} color=\"primary\">\r\n              Add to Favourites\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default RandomDish;\r\n","import axios from \"axios\";\r\n\r\nexport const fetchMeal = () => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"https://www.themealdb.com/api/json/v1/1/random.php\")\r\n      .then((response) => resolve(response))\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n","import { Favourite } from \"../containers/Dishes/components/Favourite/index\";\r\nimport { RandomDish } from \"../containers/Dishes/components/RandomDish/index\";\r\nimport { PostAddSharp, FavoriteBorderOutlined } from \"@material-ui/icons\";\r\n\r\nexport const publicRoutes = [\r\n  {\r\n    path: \"/dishes\",\r\n    element: <RandomDish />,\r\n    children: [],\r\n    icon: <PostAddSharp fontSize=\"large\" />,\r\n    label: \"Recepies\",\r\n  },\r\n  {\r\n    path: \"/favourite\",\r\n    element: <Favourite />,\r\n    children: [],\r\n    icon: <FavoriteBorderOutlined fontSize=\"large\" />,\r\n    label: \"Favourite \",\r\n  },\r\n];\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  toolbar: {\r\n    paddingRight: 14,\r\n    marginLeft: \"0 !important\",\r\n    paddingLeft: 14,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: 240,\r\n    width: `calc(100% - 240px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 30,\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  userInfo: {\r\n    margin: \"0\",\r\n    marginRight: \"20px\",\r\n    marginLeft: \"10px\",\r\n    color: \"#fff\",\r\n    padding: \"5px\",\r\n  },\r\n}));\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { publicRoutes } from \"../../../../router\";\r\n\r\nimport { Toolbar, IconButton, Typography, Button, AppBar } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport classnames from \"classnames\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst Header = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n  const { pathname } = useLocation();\r\n  const [headerTitle, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const activeRoute = publicRoutes.find((route) => route.path === pathname);\r\n    activeRoute && setTitle(activeRoute.label)\r\n\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <AppBar color=\"secondary\" position=\"absolute\" className={classnames(classes.appBar, open && classes.appBarShift)}>\r\n      <Toolbar className={classes.toolbar} variant=\"dense\">\r\n        <IconButton\r\n          size=\"small\"\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={() => setOpen(true)}\r\n          className={classnames(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n          {headerTitle ? headerTitle : \"\"}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Header;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: 240,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: `calc(${theme.spacing(6)}px + 2px)`,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(${theme.spacing(6)}px + 2px)`,\r\n    },\r\n  },\r\n  toolbarIcon: {\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    minHeight: \"48px !important\",\r\n  },\r\n  info: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    marginTop: \"6px\",\r\n  },\r\n  nav: {\r\n    paddingLeft: 10,\r\n    cursor: \"pointer\",\r\n  },\r\n  childNav: {\r\n    paddingLeft: theme.spacing(3),\r\n    backgroundColor: \"rgba(238, 238, 238, 0.5)\",\r\n  },\r\n  nestedListSubheader: {\r\n    padding: 0,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport classnames from \"classnames\";\r\nimport { Drawer, IconButton, Divider, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { publicRoutes } from \"../../../../../router\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst SideBar = ({ open, setOpen }) => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const renderListItems = (parentRoutePath, route) => {\r\n    const { icon, path, label } = route;\r\n\r\n    const fullPath = parentRoutePath ? `${parentRoutePath}${path}` : path;\r\n\r\n    return (\r\n      <ListItem\r\n        dense={Boolean(parentRoutePath)}\r\n        key={fullPath}\r\n        onClick={() => navigate(fullPath)}\r\n        button\r\n        className={classnames(classes.nav, {\r\n          [classes.childNav]: parentRoutePath,\r\n        })}\r\n      >\r\n        {parentRoutePath ? null : <ListItemIcon>{icon}</ListItemIcon>}\r\n        <ListItemText primary={label} />\r\n      </ListItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classnames(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n      }}\r\n      open={open}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <IconButton size=\"small\" onClick={() => setOpen(false)}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List className={classes.nestedListSubheader} component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n        {publicRoutes.map((route) => (\r\n          <React.Fragment key={Math.random()}>{renderListItems(null, route)}</React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\nexport default SideBar;\r\n","import \"./index.scss\";\r\n\r\nconst MainContent = () => {\r\n  return <div className=\"base \">World`s Dishes</div>;\r\n};\r\nexport default MainContent;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    minHeight: \"100%\",\r\n  },\r\n  container: {},\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflowY: \"hidden\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  appBarSpacer: {\r\n    width: \"100%\",\r\n    height: \"40px\",\r\n  },\r\n}));\r\n// theme.mixins.toolbar\r\n","import React, { useState } from \"react\";\r\nimport { Outlet } from \"react-router\";\r\nimport { Header, SideBar, MainContent } from \"../components\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Main = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header open={open} setOpen={setOpen} />\r\n      <SideBar open={open} setOpen={setOpen} />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <MainContent />\r\n        <Outlet />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","import { Routes, Route, Navigate } from \"react-router\";\r\nimport { Main } from \"./containers\";\r\nimport { publicRoutes } from \"./router\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Main />}>\r\n        {publicRoutes.map((route) => (\r\n          <Route key={route.path} path={route.path} element={route.element} />\r\n        ))}\r\n      </Route>\r\n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./styles/index.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}